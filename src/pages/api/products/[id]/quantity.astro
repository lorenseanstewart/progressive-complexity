---
import { updateProductField, getProductById } from "../../../../lib/store";
import { formatCurrency } from "../../../../lib/format";
import { parseApiParams, getTableData } from "../../../../lib/api-utils";
import { createNotFoundResponse, validateNumericInput, handleApiError } from "../../../../lib/api-response-utils";
import QuantityCell from "../../../../components/QuantityCell.astro";
import TotalsSummary from "../../../../components/TotalsSummary.astro";

const id = Number(Astro.params.id);
const formData = await Astro.request.formData();

const qtyInput = formData.get("quantity");
const qtyValidation = validateNumericInput(qtyInput, "quantity", 0);

if (qtyValidation instanceof Response) {
  return qtyValidation;
}

const qty = qtyValidation;

try {
  updateProductField(id, "quantity", qty);
} catch (e) {
  return handleApiError(e, "Error updating product");
}

// Get updated product and calculate new subtotal
const product = getProductById(id);
if (!product) {
  return createNotFoundResponse("Product");
}

const subtotal = product.price * product.quantity;

// Get updated totals for OOB swap
const params = parseApiParams(Astro.request);
const { totals } = getTableData(params);

// Set response headers for HTMX
Astro.response.headers.set("Content-Type", "text/html");
---

<!-- Main response: the updated quantity cell content -->
<QuantityCell product={product} />

<!-- OOB swap for subtotal -->
<span
  class="view"
  id={`view-sub-${id}`}
  hx-swap-oob="outerHTML"
>
  {formatCurrency(subtotal)}
</span>

<!-- OOB swap for totals -->
<TotalsSummary totals={totals} />
