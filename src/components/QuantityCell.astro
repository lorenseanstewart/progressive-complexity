---
import type { Product } from "../types";

export interface Props {
  product: Product;
  isEdit?: boolean;
}

const { product, isEdit = false } = Astro.props;
---

<span
  class="view inline-block"
  id={`view-qty-${product.id}`}
  tabindex="0"
  aria-live="polite"
  aria-atomic="true"
  hx-on:click={`window.pageUtils.toggleEdit(${product.id}, true, 'quantity')`}
  onkeydown={`if(event.key==='Enter'||event.key===' '){window.pageUtils.toggleEdit(${product.id}, true, 'quantity');event.preventDefault();}`}
>
  {product.quantity}
</span>
<span class="edit hidden">
  <input
    name="quantity"
    type="number"
    step="1"
    class="w-[100px]"
    value={product.quantity}
    hx-ext="optimistic"
    hx-patch={`/api/products/${product.id}/quantity`}
    hx-target={`#qty-cell-${product.id}`}
    hx-swap="innerHTML"
    hx-select-oob={`#totals-summary, #view-sub-${product.id}`}
    hx-push-url="false"
    hx-trigger="keyup[key=='Enter'] changed, blur changed"
    onkeydown="window.pageUtils.cancelOnEscape(event,this)"
    onkeyup="if(event.key==='Enter') window.pageUtils.exitEditModeAfterSubmit(this)"
    onblur="window.pageUtils.exitEditModeAfterSubmit(this)"
    data-optimistic={JSON.stringify({
      template: `#tpl-qty-${product.id}`,
      errorTemplate: `#tpl-qty-${product.id}-error`,
    })}
  />
</span>
<template id={`tpl-qty-${product.id}`}>
  <span
    class="view optimistic-update"
    id={`view-qty-${product.id}`}
    tabindex="0"
    aria-live="polite"
    aria-atomic="true"
    hx-on:click={`window.pageUtils.toggleEdit(${product.id}, true, 'quantity')`}
    onkeydown={`if(event.key==='Enter'||event.key===' '){window.pageUtils.toggleEdit(${product.id}, true, 'quantity');event.preventDefault();}`}
    >${"${this.value}"}</span
  >
</template>
<template id={`tpl-qty-${product.id}-error`}>
  <span
    class="view text-error"
    id={`view-qty-${product.id}`}
    >Error</span
  >
</template>
