---
import { formatCurrency } from "../lib/format";
import PriceCell from "./PriceCell.astro";
import QuantityCell from "./QuantityCell.astro";
import type { Product } from "../types";

export interface Props {
  product: Product;
  page?: number;
  pageSize?: number;
  sort?: string;
  sortDir?: string;
  searchTerm?: string;
}

const {
  product,
  page = 1,
  pageSize = 10,
  sort = "id",
  sortDir = "asc",
  searchTerm = "",
} = Astro.props;

// Helper function to build delete URL with all table state
const buildDeleteUrl = (productId: number) => {
  const params = new URLSearchParams();
  if (page !== 1) params.set("page", page.toString());
  if (pageSize !== 10) params.set("limit", pageSize.toString());
  if (sort !== "id") params.set("sortBy", sort);
  if (sortDir !== "asc") params.set("sortOrder", sortDir);
  if (searchTerm) params.set("searchTerm", searchTerm);

  const queryString = params.toString();
  return `/api/products/${productId}${queryString ? "?" + queryString : ""}`;
};

const subtotal = product.price * product.quantity;
---

<tr
  id={`row-${product.id}`}
  data-price={product.price}
  data-quantity={product.quantity}
>
  <td>{product.id}</td>
  <td>{product.name}</td>
  <td
    class="right"
    hx-ext="optimistic"
    id={`price-cell-${product.id}`}
  >
    <PriceCell product={product} />
  </td>
  <td
    class="right"
    hx-ext="optimistic"
    id={`qty-cell-${product.id}`}
  >
    <QuantityCell product={product} />
  </td>
  <td class="right">
    <span
      class="view"
      id={`view-sub-${product.id}`}
    >
      {formatCurrency(subtotal)}
    </span>
  </td>
  <td class="right">
    <button
      class="btn btn-error btn-sm"
      hx-delete={buildDeleteUrl(product.id)}
      hx-target="#table-wrapper"
      hx-swap="outerHTML swap:500ms"
      hx-select="#table-wrapper"
      hx-on:click="this.closest('tr').classList.add('fade-out')"
    >
      Delete
    </button>
  </td>
</tr>
